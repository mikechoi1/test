{"version":3,"sources":["components/BreadList.js","components/App.js","reducers/index.js","index.js"],"names":["BreadList","_this","this","props","breads","map","bread","react_default","a","createElement","className","key","name","onClick","selectBread","renderList","React","Component","connect","state","App","components_BreadList","combineReducers","price","selectedBread","arguments","length","undefined","action","type","payload","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"uOAGMA,uLACW,IAAAC,EAAAC,KACT,OAAOA,KAAKC,MAAMC,OAAOC,IAAI,SAACC,GAC1B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,IAAKL,EAAMM,MAC7BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAAoBG,QAAS,kBAAMZ,EAAKE,MAAMW,YAAYR,KAA5E,WAIJC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMM,0CAO5C,OAAOL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBR,KAAKa,qBAjB9BC,IAAMC,WAyBfC,cAJS,SAACC,GACrB,MAAO,CAAEf,OAAQe,EAAMf,SAGZc,CAAyBlB,GCVzBoB,EAfH,WACR,OACIb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAACY,EAAD,OAEJd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBCYhBY,cAAgB,CAC3BlB,OArBiB,WACjB,MAAO,CACH,CAACQ,KAAM,QAASW,MAAO,QACvB,CAACX,KAAM,cAAeW,MAAO,QAC7B,CAACX,KAAM,UAAWW,MAAO,QACzB,CAACX,KAAM,WAAYW,MAAO,QAC1B,CAACX,KAAM,YAAaW,MAAO,QAC3B,CAACX,KAAM,eAAgBW,MAAO,UAelCC,cAXyB,WAAkC,IAAjCA,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,KAAMG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3D,OAAOC,EAAOC,MACV,IAAK,iBACD,OAAOD,EAAOE,QAClB,QACI,OAAON,MCRbO,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACL9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAUP,MAAOA,GACbxB,EAAAC,EAAAC,cAAC8B,EAAD,OAEJC,SAASC,cAAc","file":"static/js/main.ef285eea.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nclass BreadList extends React.Component {\n    renderList() {\n        return this.props.breads.map((bread) => {\n            return (\n                <div className=\"item\" key={bread.name}>\n                    <div className=\"right floated content\">\n                        <button className=\"ui button primary\" onClick={() => this.props.selectBread(bread)}>\n                            Select\n                        </button>\n                    </div>\n                    <div className=\"content\">{bread.name}</div>\n                </div>\n            );\n        });\n    }\n    \n    render() {\n        return <div className=\"ui divided list\">{this.renderList()}</div>;\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { breads: state.breads };\n};\n\nexport default connect(mapStateToProps)(BreadList);","import React from 'react';\nimport BreadList from './BreadList';\n\nconst App = () => {\n    return (\n        <div className=\"ui container grid\">\n            <div className=\"ui row\">\n                <div className=\"column eight wide\">\n                    <BreadList />\n                </div>\n                <div className=\"column eight wide\">\n                    \n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default App;","import { combineReducers } from 'redux';\n\nconst breadReducer = () => {\n    return [\n        {name: 'bagel', price: '1.00'},\n        {name: 'sliced loaf', price: '3.00'},\n        {name: 'brioche', price: '1.00'},\n        {name: 'baguette', price: '1.50'},\n        {name: 'croissant', price: '2.00'},\n        {name: 'dutch crunch', price: '1.00'}\n    ];\n};\n\nconst selectedBreadReducer = (selectedBread = null, action) => {\n    switch(action.type) {\n        case 'BREAD_SELECTED':\n            return action.payload;\n        default:\n            return selectedBread;\n    }\n};\n\nexport default combineReducers({\n    breads: breadReducer,\n    selectedBread: selectedBreadReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'; //component name as cap\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n);"],"sourceRoot":""}